# Generated by Django 5.2.7 on 2025-10-14 04:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                ("address_id", models.AutoField(primary_key=True, serialize=False)),
                ("address_detail", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "address",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("CategoryID", models.AutoField(primary_key=True, serialize=False)),
                ("CategoryName", models.CharField(max_length=255)),
                ("Description", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "categories",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                ("district_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "district",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ImportReceipt",
            fields=[
                ("receipt_id", models.AutoField(primary_key=True, serialize=False)),
                ("import_date", models.DateTimeField(auto_now_add=True)),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=15),
                ),
                ("note", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "import_receipts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ImportReceiptDetail",
            fields=[
                ("detail_id", models.AutoField(primary_key=True, serialize=False)),
                ("quantity", models.IntegerField()),
                ("import_price", models.DecimalField(decimal_places=2, max_digits=15)),
            ],
            options={
                "db_table": "import_receipt_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("OrderID", models.AutoField(primary_key=True, serialize=False)),
                (
                    "Status",
                    models.CharField(
                        choices=[
                            ("execute", "Execute"),
                            ("ship", "Ship"),
                            ("success", "Success"),
                            ("fail", "Fail"),
                            ("confirmed", "Confirmed"),
                        ],
                        default="execute",
                        max_length=10,
                    ),
                ),
                ("PaymentMethod", models.CharField(max_length=50)),
                (
                    "CustomerName",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("Phone", models.CharField(blank=True, max_length=100, null=True)),
                ("DateGeneration", models.DateTimeField(auto_now_add=True)),
                ("TotalAmount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("Ward_id", models.IntegerField()),
            ],
            options={
                "db_table": "orders",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrderDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Quantity", models.IntegerField()),
                ("UnitPrice", models.DecimalField(decimal_places=0, max_digits=10)),
                ("TotalPrice", models.DecimalField(decimal_places=0, max_digits=10)),
            ],
            options={
                "db_table": "orderdetails",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("ProductID", models.AutoField(primary_key=True, serialize=False)),
                ("ProductName", models.CharField(max_length=255)),
                ("Price", models.DecimalField(decimal_places=0, max_digits=10)),
                ("Description", models.TextField()),
                ("ImageURL", models.CharField(max_length=255)),
                (
                    "Status",
                    models.CharField(
                        choices=[("hidden", "Hidden"), ("appear", "Appear")],
                        default="appear",
                        max_length=10,
                    ),
                ),
                ("quantity", models.IntegerField()),
            ],
            options={
                "db_table": "products",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Province",
            fields=[
                ("province_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "province",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                ("supplier_id", models.AutoField(primary_key=True, serialize=False)),
                ("supplier_name", models.CharField(max_length=255)),
                ("phone", models.CharField(blank=True, max_length=50, null=True)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                (
                    "address_detail",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "suppliers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "Username",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("FullName", models.CharField(max_length=255)),
                ("Email", models.EmailField(blank=True, max_length=255, null=True)),
                ("PasswordHash", models.CharField(max_length=255)),
                (
                    "Role",
                    models.CharField(
                        choices=[("customer", "Customer"), ("admin", "Admin")],
                        default="customer",
                        max_length=10,
                    ),
                ),
                ("Phone", models.CharField(max_length=100)),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Block", "Block")],
                        default="Active",
                        max_length=10,
                    ),
                ),
            ],
            options={
                "db_table": "users",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Ward",
            fields=[
                ("ward_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "ward",
                "managed": False,
            },
        ),
    ]
